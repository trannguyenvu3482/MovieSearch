{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","Error","console","log","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","key","src","alt","Home","SingleMovie","useParams","plot","Plot","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842212cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\n\r\nconst useFetch = (urlParams) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState({ show: false, msg: '' });\r\n  const [data, setData] = useState(null);\r\n\r\n  const fetchMovies = async (url) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data.Response === 'True') {\r\n        setData(data.Search || data);\r\n        setError({ show: false, msg: '' });\r\n      } else {\r\n        setError({ show: true, msg: data.Error });\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies(`${API_ENDPOINT}${urlParams}`);\r\n  }, [urlParams]);\r\n  return { isLoading, error, data };\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useState, useContext, useEffect } from 'react';\nimport useFetch from './useFetch';\n// make sure to use https\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState('superman');\n  const { isLoading, error, data: movies } = useFetch(`&s=${query}`);\n\n  return (\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst SearchForm = () => {\n  const { query, setQuery, error } = useGlobalContext();\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault}>\n      <h2>Tìm phim thích nhất của bạn...</h2>\n      <input\n        type=\"text\"\n        className=\"form-input\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {error.show && <div className=\"error\">{error.msg}</div>}\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nimport { Link } from 'react-router-dom';\nconst url =\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\n\nconst Movies = () => {\n  const { movies, isLoading } = useGlobalContext();\n\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  } else {\n    return (\n      <section className=\"movies\">\n        {movies.map((movie) => {\n          const {\n            imdbID: id,\n            Poster: poster,\n            Title: title,\n            Year: year,\n          } = movie;\n          return (\n            <Link to={`/movies/${id}`} key={id} className=\"movie\">\n              <article>\n                <img src={poster !== 'N/A' ? poster : url} alt={title} />\n                <div className=\"movie-info\">\n                  <h4 className=\"title\">{title}</h4>\n                  <p>{year}</p>\n                </div>\n              </article>\n            </Link>\n          );\n        })}\n      </section>\n    );\n  }\n};\n\nexport default Movies;\n","import React from 'react';\nimport Form from './SearchForm';\nimport Movies from './Movies';\nconst Home = () => {\n  return (\n    <main>\n      <Form />\n      <Movies />\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { API_ENDPOINT } from './context';\nimport useFetch from './useFetch';\n\nconst SingleMovie = () => {\n  const { id } = useParams();\n  const { isLoading, error, data: movie } = useFetch(`&i=${id}`);\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  }\n\n  if (error.show) {\n    return (\n      <div className=\"page-error\">\n        <h1>{error.msg}</h1>\n        <Link to=\"/\" className=\"btn\">\n          Go back\n        </Link>\n      </div>\n    );\n  }\n\n  const { Title: title, Poster: poster, Plot: plot, Year: year } = movie;\n  return (\n    <section className=\"single-movie\">\n      <img src={poster} alt={title} />\n      <div className=\"single-movie-info\">\n        <h2>{title}</h2>\n        <p>Cốt truyện: {plot}</p>\n        <h4>Năm công chiếu: {year}</h4>\n        <Link to=\"/\" className=\"btn\">\n          Về trang chủ\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleMovie;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Movie from './SingleMovie';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/movies/:id\" children={<Movie />} />\n      <Route path=\"*\" exact>\n        <Home />\n        <h1>Error 404!</h1>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\nimport { BrowserRouter as Router } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}